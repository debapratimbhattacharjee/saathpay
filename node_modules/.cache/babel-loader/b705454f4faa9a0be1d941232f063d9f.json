{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\debag\\\\OneDrive\\\\Desktop\\\\saathpe-master\\\\src\\\\components\\\\SplitFriends\\\\SplitWithFriends.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { QRCode } from 'react-qr-code'; // Importing react-qr-code library\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SplitFriends = () => {\n  _s();\n  const [friendName, setFriendName] = useState('');\n  const [amount, setAmount] = useState('');\n  const [selectedFriend, setSelectedFriend] = useState('');\n  const [friendsList, setFriendsList] = useState(['John', 'Jane', 'Alex', 'Sarah']); // Example friend names, can be dynamic\n  const [qrCode, setQrCode] = useState(''); // QR Code value for splitting\n\n  // Function to handle friend name selection\n  const handleFriendSelect = friend => {\n    setSelectedFriend(friend);\n    setFriendName(friend); // Set friend name as input value for consistency\n  };\n\n  // Handle the amount input change\n  const handleAmountChange = e => {\n    setAmount(e.target.value);\n  };\n\n  // Generate QR Code based on entered data (Friend and Amount)\n  const generateQRCode = () => {\n    if (amount && selectedFriend) {\n      const qrData = `Amount: ${amount} to ${selectedFriend}`;\n      setQrCode(qrData); // Set the QR code data\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"split-with-friends-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Split with Friends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"friend-selection\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Friend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedFriend,\n        onChange: e => handleFriendSelect(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a friend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), friendsList.map((friend, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: friend,\n          children: friend\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"amount-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Enter amount to split\",\n        value: amount,\n        onChange: handleAmountChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateQRCode,\n      children: \"Generate QR Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), qrCode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"qr-code\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Scan to Split\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(QRCode, {\n        value: qrCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), qrCode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"confirmation-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Amount: \", amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Splitting with: \", friendName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(SplitFriends, \"+uxe8cysbH+yWqR7CVDzq4Ydgyk=\");\n_c = SplitFriends;\nexport default SplitFriends;\nvar _c;\n$RefreshReg$(_c, \"SplitFriends\");","map":{"version":3,"names":["React","useState","QRCode","jsxDEV","_jsxDEV","SplitFriends","_s","friendName","setFriendName","amount","setAmount","selectedFriend","setSelectedFriend","friendsList","setFriendsList","qrCode","setQrCode","handleFriendSelect","friend","handleAmountChange","e","target","value","generateQRCode","qrData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","index","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/debag/OneDrive/Desktop/saathpe-master/src/components/SplitFriends/SplitWithFriends.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { QRCode } from 'react-qr-code'; // Importing react-qr-code library\r\n\r\nconst SplitFriends = () => {\r\n  const [friendName, setFriendName] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n  const [selectedFriend, setSelectedFriend] = useState('');\r\n  const [friendsList, setFriendsList] = useState(['John', 'Jane', 'Alex', 'Sarah']); // Example friend names, can be dynamic\r\n  const [qrCode, setQrCode] = useState(''); // QR Code value for splitting\r\n\r\n  // Function to handle friend name selection\r\n  const handleFriendSelect = (friend) => {\r\n    setSelectedFriend(friend);\r\n    setFriendName(friend); // Set friend name as input value for consistency\r\n  };\r\n\r\n  // Handle the amount input change\r\n  const handleAmountChange = (e) => {\r\n    setAmount(e.target.value);\r\n  };\r\n\r\n  // Generate QR Code based on entered data (Friend and Amount)\r\n  const generateQRCode = () => {\r\n    if (amount && selectedFriend) {\r\n      const qrData = `Amount: ${amount} to ${selectedFriend}`;\r\n      setQrCode(qrData); // Set the QR code data\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"split-with-friends-container\">\r\n      <h2>Split with Friends</h2>\r\n\r\n      {/* Select Friend */}\r\n      <div className=\"friend-selection\">\r\n        <label>Select Friend</label>\r\n        <select\r\n          value={selectedFriend}\r\n          onChange={(e) => handleFriendSelect(e.target.value)}\r\n        >\r\n          <option value=\"\">Select a friend</option>\r\n          {friendsList.map((friend, index) => (\r\n            <option key={index} value={friend}>\r\n              {friend}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      {/* Enter Amount to Split */}\r\n      <div className=\"amount-input\">\r\n        <label>Enter Amount</label>\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Enter amount to split\"\r\n          value={amount}\r\n          onChange={handleAmountChange}\r\n        />\r\n      </div>\r\n\r\n      {/* Generate QR Code Button */}\r\n      <button onClick={generateQRCode}>Generate QR Code</button>\r\n\r\n      {/* Display QR Code */}\r\n      {qrCode && (\r\n        <div className=\"qr-code\">\r\n          <h3>Scan to Split</h3>\r\n          <QRCode value={qrCode} />\r\n        </div>\r\n      )}\r\n\r\n      {/* Display the Amount and Friend Selected */}\r\n      {qrCode && (\r\n        <div className=\"confirmation-message\">\r\n          <p>Amount: {amount}</p>\r\n          <p>Splitting with: {friendName}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SplitFriends;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}