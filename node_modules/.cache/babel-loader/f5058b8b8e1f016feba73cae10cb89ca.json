{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\debag\\\\OneDrive\\\\Desktop\\\\saathpe-master\\\\src\\\\components\\\\SplitWithFriends\\\\SplitWithFriends.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './SplitExpenses.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SplitExpenses = () => {\n  _s();\n  const [totalExpense, setTotalExpense] = useState('');\n  const [friends, setFriends] = useState(['']);\n  const [splitType, setSplitType] = useState('equal'); // 'equal' or 'custom'\n  const [contributions, setContributions] = useState([]);\n  const [qrCodes, setQrCodes] = useState([]);\n\n  // Handle Total Expense input\n  const handleExpenseChange = e => {\n    setTotalExpense(e.target.value);\n  };\n\n  // Handle adding friends input\n  const handleFriendChange = (e, index) => {\n    const updatedFriends = [...friends];\n    updatedFriends[index] = e.target.value;\n    setFriends(updatedFriends);\n  };\n\n  // Handle splitting type (equal or custom)\n  const handleSplitTypeChange = e => {\n    setSplitType(e.target.value);\n  };\n\n  // Function to add a new friend input box (limit to 5 friends)\n  const addFriend = () => {\n    if (friends.length < 5) {\n      setFriends([...friends, '']);\n    }\n  };\n\n  // Handle submit button to calculate contributions\n  const handleSubmit = () => {\n    const total = parseFloat(totalExpense);\n    if (splitType === 'equal') {\n      const equalShare = total / friends.length;\n      setContributions(friends.map(() => equalShare));\n    } else {\n      setContributions(friends.map((_, index) => parseFloat(document.getElementById(`custom-contribution-${index}`).value) || 0));\n    }\n\n    // Simulate QR code generation for each friend\n    const qrCodeImages = friends.map((friend, index) => ({\n      name: friend,\n      qrCode: `https://api.qrserver.com/v1/create-qr-code/?data=Contribution%3A%20${contributions[index]}&size=100x100`\n    }));\n    setQrCodes(qrCodeImages);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"split-expenses-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Split Expenses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: totalExpense,\n        onChange: handleExpenseChange,\n        placeholder: \"Enter total expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"friends-container\",\n        children: friends.map((friend, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"friend-entry\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: friend,\n            onChange: e => handleFriendChange(e, index),\n            placeholder: `Friend ${index + 1} Name`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), splitType === 'custom' && /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: `custom-contribution-${index}`,\n            placeholder: `Amount for ${friend}`,\n            min: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), friends.length < 5 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addFriend,\n        className: \"submit-button\",\n        children: \"Add Friend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"split-type\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"splitType\",\n            value: \"equal\",\n            checked: splitType === 'equal',\n            onChange: handleSplitTypeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), \"Equal Split\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"splitType\",\n            value: \"custom\",\n            checked: splitType === 'custom',\n            onChange: handleSplitTypeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), \"Custom Split\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"submit-button\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), qrCodes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"qr-container\",\n      children: qrCodes.map((qr, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"qr-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: qr.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Contribution: \", contributions[index]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: qr.qrCode,\n          alt: \"QR Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(SplitExpenses, \"N66lCcmajRfDvuUFVeFYZiY06Nw=\");\n_c = SplitExpenses;\nexport default SplitExpenses;\nvar _c;\n$RefreshReg$(_c, \"SplitExpenses\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SplitExpenses","_s","totalExpense","setTotalExpense","friends","setFriends","splitType","setSplitType","contributions","setContributions","qrCodes","setQrCodes","handleExpenseChange","e","target","value","handleFriendChange","index","updatedFriends","handleSplitTypeChange","addFriend","length","handleSubmit","total","parseFloat","equalShare","map","_","document","getElementById","qrCodeImages","friend","name","qrCode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","id","min","onClick","checked","qr","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/debag/OneDrive/Desktop/saathpe-master/src/components/SplitWithFriends/SplitWithFriends.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './SplitExpenses.css';\r\n\r\nconst SplitExpenses = () => {\r\n  const [totalExpense, setTotalExpense] = useState('');\r\n  const [friends, setFriends] = useState(['']);\r\n  const [splitType, setSplitType] = useState('equal'); // 'equal' or 'custom'\r\n  const [contributions, setContributions] = useState([]);\r\n  const [qrCodes, setQrCodes] = useState([]);\r\n\r\n  // Handle Total Expense input\r\n  const handleExpenseChange = (e) => {\r\n    setTotalExpense(e.target.value);\r\n  };\r\n\r\n  // Handle adding friends input\r\n  const handleFriendChange = (e, index) => {\r\n    const updatedFriends = [...friends];\r\n    updatedFriends[index] = e.target.value;\r\n    setFriends(updatedFriends);\r\n  };\r\n\r\n  // Handle splitting type (equal or custom)\r\n  const handleSplitTypeChange = (e) => {\r\n    setSplitType(e.target.value);\r\n  };\r\n\r\n  // Function to add a new friend input box (limit to 5 friends)\r\n  const addFriend = () => {\r\n    if (friends.length < 5) {\r\n      setFriends([...friends, '']);\r\n    }\r\n  };\r\n\r\n  // Handle submit button to calculate contributions\r\n  const handleSubmit = () => {\r\n    const total = parseFloat(totalExpense);\r\n    if (splitType === 'equal') {\r\n      const equalShare = total / friends.length;\r\n      setContributions(friends.map(() => equalShare));\r\n    } else {\r\n      setContributions(friends.map((_, index) => parseFloat(document.getElementById(`custom-contribution-${index}`).value) || 0));\r\n    }\r\n\r\n    // Simulate QR code generation for each friend\r\n    const qrCodeImages = friends.map((friend, index) => ({\r\n      name: friend,\r\n      qrCode: `https://api.qrserver.com/v1/create-qr-code/?data=Contribution%3A%20${contributions[index]}&size=100x100`,\r\n    }));\r\n    setQrCodes(qrCodeImages);\r\n  };\r\n\r\n  return (\r\n    <div className=\"split-expenses-container\">\r\n      <h2>Split Expenses</h2>\r\n      <div className=\"expense-input-container\">\r\n        {/* Total Expense Input */}\r\n        <input\r\n          type=\"number\"\r\n          value={totalExpense}\r\n          onChange={handleExpenseChange}\r\n          placeholder=\"Enter total expense\"\r\n        />\r\n\r\n        {/* Friends List Input */}\r\n        <div className=\"friends-container\">\r\n          {friends.map((friend, index) => (\r\n            <div key={index} className=\"friend-entry\">\r\n              <input\r\n                type=\"text\"\r\n                value={friend}\r\n                onChange={(e) => handleFriendChange(e, index)}\r\n                placeholder={`Friend ${index + 1} Name`}\r\n              />\r\n              {splitType === 'custom' && (\r\n                <input\r\n                  type=\"number\"\r\n                  id={`custom-contribution-${index}`}\r\n                  placeholder={`Amount for ${friend}`}\r\n                  min=\"0\"\r\n                />\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Button to add more friends */}\r\n        {friends.length < 5 && (\r\n          <button onClick={addFriend} className=\"submit-button\">Add Friend</button>\r\n        )}\r\n\r\n        {/* Split Type Options */}\r\n        <div className=\"split-type\">\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"splitType\"\r\n              value=\"equal\"\r\n              checked={splitType === 'equal'}\r\n              onChange={handleSplitTypeChange}\r\n            />\r\n            Equal Split\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"splitType\"\r\n              value=\"custom\"\r\n              checked={splitType === 'custom'}\r\n              onChange={handleSplitTypeChange}\r\n            />\r\n            Custom Split\r\n          </label>\r\n        </div>\r\n\r\n        {/* Submit Button */}\r\n        <button onClick={handleSubmit} className=\"submit-button\">\r\n          Submit\r\n        </button>\r\n      </div>\r\n\r\n      {/* QR Code and Contribution Display */}\r\n      {qrCodes.length > 0 && (\r\n        <div className=\"qr-container\">\r\n          {qrCodes.map((qr, index) => (\r\n            <div key={index} className=\"qr-box\">\r\n              <p>{qr.name}</p>\r\n              <p>Contribution: {contributions[index]}</p>\r\n              <img src={qr.qrCode} alt=\"QR Code\" />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SplitExpenses;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}